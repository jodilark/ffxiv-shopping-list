{"version":3,"sources":["app.js","controllers/mainCtrl.js","directives/connectionTestDir.js","directives/strikeOutDir.js","services/recipeListService.js","services/singleRecipeService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","$stateParams","recipeListService","singleRecipeService","$interval","controllerTest","recipeListServiceTest","singleRecipeServiceTest","trl","allTheRaw","lastOfAll","calvin","recipe","selectedRecipe","qtyToMake","iQty","id","length","getOList","match","join","listOfRecipes","getRecipeList","then","recipeCard","response","data","enabeGetRecipe","getRecipeButton","bool","getRecipe","push","job","classjob","name","icon","level","type","url_type","ingredients","tree","map","e","i","connect_craftable","qty","quantity","synthOBJ","Object","keys","synths","subID","newRes","getRawMaterialsList","filter","newQty","forEach","elem","ind","assign","setMatches","temp","indexOf","rawList","console","log","directive","changeMeService","link","scope","element","attribure","on","css","service","$http","get"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('noServer', ['ui.router', 'ui.select', 'ngSanitize'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: './views/home.html',\r\n                url: '/'                \r\n            })\r\n            .state('recipe', {\r\n                templateUrl: './views/selectedRecipe.html',\r\n                url: '/recipe',    \r\n            })\r\n            \r\n\r\n    })","angular.module('noServer').controller('changeMeController', function ($scope, $stateParams, recipeListService, singleRecipeService, $interval) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.controllerTest = \"changeMe controller is working\"\r\n    $scope.recipeListServiceTest = recipeListService.recipeListServiceTest\r\n    $scope.singleRecipeServiceTest = singleRecipeService.singleRecipeServiceTest\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              VARIABLES               ║\r\n    //      ╚══════════════════════════════════════╝\r\n    let trl = []\r\n    let allTheRaw = []\r\n    let lastOfAll = []\r\n    let calvin = []\r\n    $scope.recipe = trl[0]\r\n    $scope.selectedRecipe //two way binding\r\n    $scope.qtyToMake = 1 //two way binding\r\n    $scope.iQty = 1 //two way binding\r\n    $scope.id = (selectedRecipe) => {\r\n        calvin.length = 0\r\n        trl.length = 0\r\n        allTheRaw.length = 0\r\n        lastOfAll.length = 0\r\n        $scope.getOList(selectedRecipe.match(/\\d/ig).join(''))\r\n    }\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              FUNCTIONS               ║\r\n    //      ╚══════════════════════════════════════╝\r\n    // ............| Get a list of all recipes\r\n    $scope.listOfRecipes = _ => recipeListService.getRecipeList().then(response => $scope.recipeCard = response.data)\r\n    $scope.listOfRecipes()\r\n\r\n    // ............| Enable get recipe button\r\n    $scope.enabeGetRecipe = bool => { return $scope.getRecipeButton = bool }\r\n\r\n    // ............| get and create recipe object\r\n    $scope.getOList = id => {\r\n        singleRecipeService.getRecipe(id).then(response => {\r\n            trl.push({ job: response.data.classjob.name, icon: response.data.icon, id: response.data.id, name: response.data.name, level: response.data.level, type: response.data.url_type, ingredients: [] })\r\n            response.data.tree.map((e, i) => {\r\n                if (!e.connect_craftable) {\r\n                    trl[0].ingredients.push({ name: e.name, qty: e.quantity, icon: e.icon })\r\n                }\r\n                else {\r\n                    let synthOBJ = Object.keys(e.synths), subID = synthOBJ[0]\r\n                    trl[0].ingredients.push({ name: e.name, qty: e.quantity, icon: e.icon, ingredients: [] })\r\n                    singleRecipeService.getRecipe(subID).then(newRes => {\r\n                        trl[0].ingredients[i].ingredients = newRes.data.tree.map(e => {\r\n                            return { name: e.name, qty: e.quantity * trl[0].ingredients[i].qty, icon: e.icon }\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        $interval(_ => {\r\n            getRawMaterialsList(id)\r\n        }, 800, 1)\r\n    }\r\n\r\n    // ............| gets raw materials list and adds it to main object\r\n    const getRawMaterialsList = (id) => {\r\n        trl[0].ingredients.filter((e, i) => {\r\n            let newQty = e.qty\r\n            if (!e.ingredients) {\r\n                allTheRaw.push(e)\r\n            }\r\n            else {\r\n                e.ingredients.forEach((elem, ind) => {\r\n                    allTheRaw.push(elem)\r\n                })\r\n            }\r\n        })\r\n        \r\n        allTheRaw.forEach(elem => calvin.push(Object.assign({}, elem)))\r\n\r\n        $interval(_ => {\r\n            setMatches()\r\n        }, 500, 1)\r\n    }\r\n\r\n    // ............| combines like materials\r\n    const setMatches = _ => {\r\n        let temp = [];\r\n        calvin.forEach(elem => {\r\n            if (temp.indexOf(elem.name) == -1) {\r\n                temp.push(elem.name)\r\n                lastOfAll.push(elem)\r\n            }\r\n            else {\r\n                lastOfAll.forEach(e => {\r\n                    if (e.name == elem.name) {\r\n                        e.qty = e.qty + elem.qty\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        trl[0].rawList = lastOfAll\r\n        $scope.recipe = trl[0]\r\n        console.log($scope.recipe)\r\n    }\r\n})","angular.module(\"noServer\").directive(\"tests\", function (changeMeService, recipeListService, singleRecipeService){\r\n    return {\r\n        templateUrl: \"../../views/connectionTest.html\"\r\n    }\r\n})","angular.module(\"noServer\").directive(\"strikeOut\", function (){\r\n    return {\r\n        link: function (scope, element, attribure){\r\n            element.on(\"click\", function (){             \r\n                 element.css('text-decoration', 'line-through')                \r\n                 element.css('text-decoration-color', 'white')                \r\n            })\r\n        }\r\n    }\r\n})","angular.module('noServer').service('recipeListService', function ($http) {\r\n    this.recipeListServiceTest = \"recipeListService is working\"\r\n\r\nthis.getRecipeList  = () => ( $http.get('https://api.xivdb.com/recipe') )\r\n\r\n})","angular.module('noServer').service('singleRecipeService', function ($http) {\r\n    this.singleRecipeServiceTest = \"singleRecipeService is working\"\r\n\r\nthis.getRecipe = (id) => ( $http.get('https://api.xivdb.com/recipe/' + id).then(function (response) {\r\n            return response\r\n        }) )\r\n\r\n\r\n})\r\n"]}