{"version":3,"sources":["app.js","controllers/mainCtrl.js","services/mainSrv.js","services/recipeListService.js","services/singleRecipeService.js","directives/connectionTestDir.js","directives/nestedNestedDir.js","directives/nestedRecipeDir.js","directives/shoppingList.js","directives/strikeOutDir.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","changeMeService","$stateParams","recipeListService","singleRecipeService","$interval","controllerTest","serviceTest","recipeListServiceTest","singleRecipeServiceTest","trl","allTheRaw","lastOfAll","recipe","theID","selectedRecipe","qtyToMake","id","length","getOList","match","join","listOfRecipes","getRecipeList","then","response","recipeCard","data","enabeGetRecipe","bool","getRecipeButton","getRecipe","push","job","classjob","name","icon","level","type","url_type","ingredients","tree","map","e","i","connect_craftable","qty","quantity","synthOBJ","Object","keys","synths","subID","newRes","meWantRaw","bananasunday","setMatches","a","temp","indexOf","rawList","console","log","service","$http","recipeList","crystal","isRecipe","get","directive","link","scope","element","attribure","on","css"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('noServer', ['ui.router', 'ui.select', 'ngSanitize'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: './views/home.html',\r\n                url: '/'                \r\n            })\r\n            .state('recipe', {\r\n                templateUrl: './views/selectedRecipe.html',\r\n                url: '/recipe',    \r\n            })\r\n            \r\n\r\n    })","angular.module('noServer').controller('changeMeController', function ($scope, changeMeService, $stateParams, recipeListService, singleRecipeService, $interval) {\r\n    // hookup tests\r\n    $scope.controllerTest = \"changeMe controller is working\"\r\n    $scope.serviceTest = changeMeService.serviceTest\r\n    $scope.recipeListServiceTest = recipeListService.recipeListServiceTest\r\n    $scope.singleRecipeServiceTest = singleRecipeService.singleRecipeServiceTest\r\n    \r\n    // list of variables\r\n    let trl = []\r\n    let allTheRaw = []\r\n    let lastOfAll = []\r\n    $scope.recipe = trl[0]\r\n        $scope.theID    \r\n        $scope.selectedRecipe //two way binding\r\n        $scope.qtyToMake = 1 //two way binding\r\n        $scope.id = (selectedRecipe) => {\r\n            // $scope.theRecipe(selectedRecipe.match(/\\d/ig).join(''))\r\n            trl.length = 0\r\n            allTheRaw.length = 0\r\n            lastOfAll.length = 0\r\n            $scope.getOList(selectedRecipe.match(/\\d/ig).join(''))\r\n        }\r\n\r\n\r\n\r\n        // functions\r\n        //Get a list of all recipes\r\n        $scope.listOfRecipes = function () {\r\n            recipeListService.getRecipeList().then(function (response) {\r\n                $scope.recipeCard = response.data\r\n            })\r\n        }\r\n        $scope.listOfRecipes()\r\n\r\n        // Get a single recipe by ID\r\n        // $scope.theRecipe = function (id) {\r\n        //     singleRecipeService.getRecipe(id).then(function (response) {\r\n        //         $scope.thisRecipe = response.data\r\n        //         $scope.tree = response.data.tree\r\n        //         console.log($scope.thisRecipe)\r\n        //     })\r\n        // }\r\n\r\n    //   item.synths['1'].tree  \r\n\r\n        // show directive span if recipe has a url_type = 'recipe'\r\n        // $scope.isRecipe = function (urltype, obj) {\r\n        //     // console.log(`the obj is ${obj}`)\r\n        //     for(let key in obj){\r\n        //         // console.log(`the key in the obj is ${key}`)\r\n        //         $scope.synthID = obj[key]\r\n        //         // console.log(`the new obj should be ${$scope.synthID} but is actually ${obj[key]}`)\r\n        //         break;\r\n        //     }        \r\n        //     return urltype > 0\r\n        // }\r\n\r\n        //add tier1 objects to raw material array\r\n        // var rawArr = []\r\n        // $scope.rawMat = rawArr\r\n        // $scope.raw = function (name, qty, sName, sQty, recipeBool) {\r\n        //     if (recipeBool) {\r\n        //         rawArr.push(\r\n        //             {\r\n        //                 [sName]: sQty\r\n        //             }\r\n        //         )\r\n        //     }\r\n        //     else {\r\n        //         rawArr.push(\r\n        //             {\r\n        //                 [name]: qty\r\n        //             }\r\n        //         )\r\n        //     }\r\n\r\n        //     return rawArr //of raw objects and their quantities\r\n        // }\r\n\r\n        // combine duplicate mats\r\n        // var shoppingListArr = []\r\n        // $scope.testy = shoppingListArr\r\n        // $scope.startInterval = function(){\r\n        //     $interval(function(){\r\n        //         $scope.combineMats = function (rawArr) {\r\n        //             let a = rawArr;\r\n        //             let ans = {};\r\n        //             for (let i = 0; i < a.length; ++i) {\r\n        //                 for (let obj in a[i]) {\r\n        //                     ans[obj] = ans[obj] ? ans[obj] + a[i][obj] : a[i][obj];\r\n        //                 }\r\n        //             }\r\n        //             shoppingListArr.push(ans)\r\n        //         }\r\n        //         // console.log(rawArr)\r\n        //         $scope.combineMats(rawArr)\r\n        //     }, 500,1)  \r\n        // }\r\n\r\n        //make the shoppinListArr into a Json blob\r\n        // var jsonObject = []\r\n        // $scope.shoppingJson = jsonObject\r\n        // $scope.startIntervalMakeJson = function(){\r\n        //     $interval(function(){\r\n        //         $scope.makeJson = function (arr, newKeyName, newValueQty) {\r\n        //             let obj = arr[0]\r\n        //             // console.log(obj)\r\n        //             for (let key in obj) {\r\n        //                 // console.log(key)\r\n        //                 // console.log(obj[key])\r\n        //                 jsonObject.push(\r\n        //                     {\r\n        //                         [newKeyName]: key\r\n        //                         , [newValueQty]: obj[key]\r\n        //                     }\r\n        //                 )\r\n        //             }\r\n        //             // console.log(jsonObject)\r\n        //         }\r\n        //         // console.log(jsonObject)\r\n        //         $scope.makeJson(shoppingListArr, \"name\", \"qty\")\r\n        //     }, 1000,1)\r\n        // }\r\n\r\n        \r\n        //Enable get recipe button\r\n        $scope.enabeGetRecipe = function (bool) {\r\n            return $scope.getRecipeButton = bool\r\n        }\r\n        \r\n        //get dynamic synths id\r\n$scope.getOList = id => {\r\n    singleRecipeService.getRecipe(id).then(response => {\r\n        trl.push({\r\n            job: response.data.classjob.name\r\n            , icon: response.data.icon\r\n            , id: response.data.id\r\n            , name: response.data.name\r\n            , level: response.data.level\r\n            , type: response.data.url_type\r\n            , ingredients: []\r\n        })\r\n        response.data.tree.map((e, i) => {\r\n            if(!e.connect_craftable){\r\n                trl[0].ingredients.push({name: e.name, qty: e.quantity, icon: e.icon})\r\n            }\r\n            else {\r\n                let synthOBJ = Object.keys(e.synths)\r\n                let subID = synthOBJ[0]\r\n                trl[0].ingredients.push({name: e.name, qty: e.quantity, icon: e.icon, ingredients: []})\r\n                singleRecipeService.getRecipe(subID).then(newRes => {\r\n                    trl[0].ingredients[i].ingredients = newRes.data.tree.map(e => {\r\n                        return {name: e.name, qty: e.quantity, icon: e.icon}\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    })\r\n    $interval(_ => {\r\n        $scope.meWantRaw(id)\r\n    }, 500, 1)\r\n}\r\n\r\n$scope.meWantRaw = (id) => {\r\n    const bananasunday = id => {\r\n        singleRecipeService.getRecipe(id).then(response => {\r\n            response.data.tree.map(e => {\r\n                if(!e.connect_craftable) allTheRaw.push({name: e.name, qty: e.quantity, icon: e.icon})\r\n                    else {let synthOBJ = Object.keys(e.synths), subID = synthOBJ[0]; bananasunday(subID)}        \r\n            })\r\n        })\r\n    }\r\n    bananasunday(id)\r\n    $interval(function(){\r\n        $scope.setMatches()\r\n    }, 800, 1)\r\n}\r\n\r\n$scope.setMatches = _ => {\r\n    // lastOfAll.length = 0\r\n    let a = allTheRaw;\r\n    let temp = [];\r\n    for (let i = 0; i < a.length; ++i) {\r\n        // console.log(`name from allTheRaw = ${JSON.stringify(a[i].name)}`)\r\n        if(temp.indexOf(a[i].name) == -1){\r\n            temp.push(a[i].name)\r\n            lastOfAll.push(a[i])\r\n        }\r\n        else {\r\n            lastOfAll.map(e =>{\r\n                if(e.name == a[i].name){\r\n                    e.qty = e.qty + a[i].qty\r\n                }\r\n            })\r\n        }\r\n    }\r\n    // console.log(`temp is: ${temp}`)\r\n    // console.log(`lastOfAll is: ${JSON.stringify(lastOfAll)}`)\r\n    // console.log(`this  is: ${JSON.stringify(allTheRaw)}`)\r\n    // console.log(lastOfAll)\r\n    trl[0].rawList = lastOfAll\r\n    $scope.recipe = trl[0]\r\n    console.log($scope.recipe)\r\n}\r\n\r\n})","angular.module('noServer').service('changeMeService', function ($http) {\r\n    this.serviceTest = \"changeMe service is working\"\r\n\r\n    // test data\r\n    this.recipeList = [{\r\n        name: \"soup\"\r\n        , id: 1\r\n        , crystal: \"fire\"\r\n        , ingredients: [{\r\n            name: \"onion\"\r\n            , quantity: 5\r\n        },\r\n        {\r\n            name: \"salt\"\r\n            , quantity: 2\r\n        },\r\n        {\r\n            name: \"grilled Meat\"\r\n            , quantity: 2\r\n            , isRecipe: true\r\n            , id: 3\r\n            , crystal: \"fire\"\r\n            , ingredients: [\r\n                {\r\n                    name: \"sheep meat\"\r\n                    , quantity: 1\r\n                },\r\n                {\r\n                    name: \"salt\"\r\n                    , quantity: 1\r\n                }\r\n            ]\r\n        }        \r\n    ]\r\n},\r\n    {\r\n        name: \"banana pie\",\r\n        id: 2\r\n    }\r\n    ]\r\n\r\n    \r\n\r\n})","angular.module('noServer').service('recipeListService', function ($http) {\r\n    this.recipeListServiceTest = \"recipeListService is working\"\r\n\r\nthis.getRecipeList  = () => ( $http.get('https://api.xivdb.com/recipe') )\r\n\r\n})","angular.module('noServer').service('singleRecipeService', function ($http) {\r\n    this.singleRecipeServiceTest = \"singleRecipeService is working\"\r\n\r\nthis.getRecipe = (id) => ( $http.get('https://api.xivdb.com/recipe/' + id).then(function (response) {\r\n            return response\r\n        }) )\r\n\r\n\r\n})\r\n","angular.module(\"noServer\").directive(\"tests\", function (changeMeService, recipeListService, singleRecipeService){\r\n    return {\r\n        templateUrl: \"../../views/connectionTest.html\"\r\n    }\r\n})","angular.module(\"noServer\").directive('nestedNestedRecipe', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/nestedNestedRecipe.html'\r\n    }\r\n})","angular.module(\"noServer\").directive('nestedRecipe', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/nestedRecipe.html'\r\n    }\r\n})","angular.module(\"noServer\").directive('shoppingList', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/shoppingList.html'\r\n    }\r\n})","angular.module(\"noServer\").directive(\"strikeOut\", function (){\r\n    return {\r\n        link: function (scope, element, attribure){\r\n            element.on(\"click\", function (){             \r\n                 element.css('text-decoration', 'line-through')                \r\n                 element.css('text-decoration-color', 'white')                \r\n            })\r\n        }\r\n    }\r\n})"]}