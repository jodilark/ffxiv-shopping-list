{"version":3,"sources":["app.js","controllers/mainCtrl.js","directives/connectionTestDir.js","directives/nestedNestedDir.js","directives/nestedRecipeDir.js","directives/shoppingList.js","directives/strikeOutDir.js","services/mainSrv.js","services/recipeListService.js","services/singleRecipeService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","changeMeService","$stateParams","recipeListService","singleRecipeService","$interval","controllerTest","serviceTest","recipeListServiceTest","singleRecipeServiceTest","trl","allTheRaw","lastOfAll","theID","selectedRecipe","qtyToMake","id","length","getOList","match","join","listOfRecipes","getRecipeList","then","response","recipeCard","data","theRecipe","getRecipe","thisRecipe","tree","console","log","isRecipe","urltype","obj","key","synthID","rawArr","rawMat","raw","name","qty","sName","sQty","recipeBool","push","shoppingListArr","testy","startInterval","combineMats","a","ans","i","jsonObject","shoppingJson","startIntervalMakeJson","makeJson","arr","newKeyName","newValueQty","enabeGetRecipe","bool","getRecipeButton","job","classjob","icon","level","type","url_type","ingredients","map","e","connect_craftable","quantity","synthOBJ","Object","keys","synths","subID","newRes","meWantRaw","bananasunday","setMatches","temp","indexOf","rawList","directive","link","scope","element","attribure","on","css","service","$http","recipeList","crystal","get"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('noServer', ['ui.router', 'ui.select', 'ngSanitize'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: './views/home.html',\r\n                url: '/'                \r\n            })\r\n            .state('recipe', {\r\n                templateUrl: './views/selectedRecipe.html',\r\n                url: '/recipe',    \r\n            })\r\n            \r\n\r\n    })","angular.module('noServer').controller('changeMeController', function ($scope, changeMeService, $stateParams, recipeListService, singleRecipeService, $interval) {\r\n    // hookup tests\r\n    $scope.controllerTest = \"changeMe controller is working\"\r\n    $scope.serviceTest = changeMeService.serviceTest\r\n    $scope.recipeListServiceTest = recipeListService.recipeListServiceTest\r\n    $scope.singleRecipeServiceTest = singleRecipeService.singleRecipeServiceTest\r\n    \r\n    // list of variables\r\n    let trl = []\r\n    let allTheRaw = []\r\n    let lastOfAll = []\r\n        $scope.theID    \r\n        $scope.selectedRecipe //two way binding\r\n        $scope.qtyToMake = 1 //two way binding\r\n        $scope.id = (selectedRecipe) => {\r\n            // $scope.theRecipe(selectedRecipe.match(/\\d/ig).join(''))\r\n            trl.length = 0\r\n            allTheRaw.length = 0\r\n            lastOfAll.length = 0\r\n            $scope.getOList(selectedRecipe.match(/\\d/ig).join(''))\r\n        }\r\n\r\n\r\n\r\n        // functions\r\n        //Get a list of all recipes\r\n        $scope.listOfRecipes = function () {\r\n            recipeListService.getRecipeList().then(function (response) {\r\n                $scope.recipeCard = response.data\r\n            })\r\n        }\r\n        $scope.listOfRecipes()\r\n\r\n        // Get a single recipe by ID\r\n        $scope.theRecipe = function (id) {\r\n            singleRecipeService.getRecipe(id).then(function (response) {\r\n                $scope.thisRecipe = response.data\r\n                $scope.tree = response.data.tree\r\n                console.log($scope.thisRecipe)\r\n            })\r\n        }\r\n\r\n    //   item.synths['1'].tree  \r\n\r\n        // show directive span if recipe has a url_type = 'recipe'\r\n        $scope.isRecipe = function (urltype, obj) {\r\n            // console.log(`the obj is ${obj}`)\r\n            for(let key in obj){\r\n                // console.log(`the key in the obj is ${key}`)\r\n                $scope.synthID = obj[key]\r\n                // console.log(`the new obj should be ${$scope.synthID} but is actually ${obj[key]}`)\r\n                break;\r\n            }        \r\n            return urltype > 0\r\n        }\r\n\r\n        //add tier1 objects to raw material array\r\n        var rawArr = []\r\n        $scope.rawMat = rawArr\r\n        $scope.raw = function (name, qty, sName, sQty, recipeBool) {\r\n            if (recipeBool) {\r\n                rawArr.push(\r\n                    {\r\n                        [sName]: sQty\r\n                    }\r\n                )\r\n            }\r\n            else {\r\n                rawArr.push(\r\n                    {\r\n                        [name]: qty\r\n                    }\r\n                )\r\n            }\r\n\r\n            return rawArr //of raw objects and their quantities\r\n        }\r\n\r\n        // combine duplicate mats\r\n        var shoppingListArr = []\r\n        $scope.testy = shoppingListArr\r\n        $scope.startInterval = function(){\r\n            $interval(function(){\r\n                $scope.combineMats = function (rawArr) {\r\n                    let a = rawArr;\r\n                    let ans = {};\r\n                    for (let i = 0; i < a.length; ++i) {\r\n                        for (let obj in a[i]) {\r\n                            ans[obj] = ans[obj] ? ans[obj] + a[i][obj] : a[i][obj];\r\n                        }\r\n                    }\r\n                    shoppingListArr.push(ans)\r\n                }\r\n                // console.log(rawArr)\r\n                $scope.combineMats(rawArr)\r\n            }, 500,1)  \r\n        }\r\n\r\n        //make the shoppinListArr into a Json blob\r\n        var jsonObject = []\r\n        $scope.shoppingJson = jsonObject\r\n        $scope.startIntervalMakeJson = function(){\r\n            $interval(function(){\r\n                $scope.makeJson = function (arr, newKeyName, newValueQty) {\r\n                    let obj = arr[0]\r\n                    // console.log(obj)\r\n                    for (let key in obj) {\r\n                        // console.log(key)\r\n                        // console.log(obj[key])\r\n                        jsonObject.push(\r\n                            {\r\n                                [newKeyName]: key\r\n                                , [newValueQty]: obj[key]\r\n                            }\r\n                        )\r\n                    }\r\n                    // console.log(jsonObject)\r\n                }\r\n                // console.log(jsonObject)\r\n                $scope.makeJson(shoppingListArr, \"name\", \"qty\")\r\n            }, 1000,1)\r\n        }\r\n\r\n        \r\n        //Enable get recipe button\r\n        $scope.enabeGetRecipe = function (bool) {\r\n            return $scope.getRecipeButton = bool\r\n        }\r\n        \r\n        //get dynamic synths id\r\n$scope.getOList = id => {\r\n    singleRecipeService.getRecipe(id).then(response => {\r\n        trl.push({\r\n            job: response.data.classjob.name\r\n            , icon: response.data.icon\r\n            , id: response.data.id\r\n            , name: response.data.name\r\n            , level: response.data.level\r\n            , type: response.data.url_type\r\n            , ingredients: []\r\n        })\r\n        response.data.tree.map((e, i) => {\r\n            if(!e.connect_craftable){\r\n                trl[0].ingredients.push({name: e.name, qty: e.quantity, icon: e.icon})\r\n            }\r\n            else {\r\n                let synthOBJ = Object.keys(e.synths)\r\n                let subID = synthOBJ[0]\r\n                trl[0].ingredients.push({name: e.name, qty: e.quantity, icon: e.icon, ingredients: []})\r\n                singleRecipeService.getRecipe(subID).then(newRes => {\r\n                    trl[0].ingredients[i].ingredients = newRes.data.tree.map(e => {\r\n                        return {name: e.name, qty: e.quantity, icon: e.icon}\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    })\r\n    $interval(_ => {\r\n        $scope.meWantRaw(id)\r\n    }, 500, 1)\r\n}\r\n\r\n$scope.meWantRaw = (id) => {\r\n    const bananasunday = id => {\r\n        singleRecipeService.getRecipe(id).then(response => {\r\n            response.data.tree.map(e => {\r\n                if(!e.connect_craftable) allTheRaw.push({name: e.name, qty: e.quantity, icon: e.icon})\r\n                    else {let synthOBJ = Object.keys(e.synths), subID = synthOBJ[0]; bananasunday(subID)}        \r\n            })\r\n        })\r\n    }\r\n    bananasunday(id)\r\n    $interval(function(){\r\n        $scope.setMatches()\r\n    }, 800, 1)\r\n}\r\n\r\n$scope.setMatches = _ => {\r\n    // lastOfAll.length = 0\r\n    let a = allTheRaw;\r\n    let temp = [];\r\n    for (let i = 0; i < a.length; ++i) {\r\n        // console.log(`name from allTheRaw = ${JSON.stringify(a[i].name)}`)\r\n        if(temp.indexOf(a[i].name) == -1){\r\n            temp.push(a[i].name)\r\n            lastOfAll.push(a[i])\r\n        }\r\n        else {\r\n            lastOfAll.map(e =>{\r\n                if(e.name == a[i].name){\r\n                    e.qty = e.qty + a[i].qty\r\n                }\r\n            })\r\n        }\r\n    }\r\n    // console.log(`temp is: ${temp}`)\r\n    // console.log(`lastOfAll is: ${JSON.stringify(lastOfAll)}`)\r\n    // console.log(`this  is: ${JSON.stringify(allTheRaw)}`)\r\n    // console.log(lastOfAll)\r\n    trl[0].rawList = lastOfAll\r\n    console.log(trl[0])\r\n}\r\n\r\n})","angular.module(\"noServer\").directive(\"tests\", function (changeMeService, recipeListService, singleRecipeService){\r\n    return {\r\n        templateUrl: \"../../views/connectionTest.html\"\r\n    }\r\n})","angular.module(\"noServer\").directive('nestedNestedRecipe', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/nestedNestedRecipe.html'\r\n    }\r\n})","angular.module(\"noServer\").directive('nestedRecipe', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/nestedRecipe.html'\r\n    }\r\n})","angular.module(\"noServer\").directive('shoppingList', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/shoppingList.html'\r\n    }\r\n})","angular.module(\"noServer\").directive(\"strikeOut\", function (){\r\n    return {\r\n        link: function (scope, element, attribure){\r\n            element.on(\"click\", function (){             \r\n                 element.css('text-decoration', 'line-through')                \r\n                 element.css('text-decoration-color', 'white')                \r\n            })\r\n        }\r\n    }\r\n})","angular.module('noServer').service('changeMeService', function ($http) {\r\n    this.serviceTest = \"changeMe service is working\"\r\n\r\n    // test data\r\n    this.recipeList = [{\r\n        name: \"soup\"\r\n        , id: 1\r\n        , crystal: \"fire\"\r\n        , ingredients: [{\r\n            name: \"onion\"\r\n            , quantity: 5\r\n        },\r\n        {\r\n            name: \"salt\"\r\n            , quantity: 2\r\n        },\r\n        {\r\n            name: \"grilled Meat\"\r\n            , quantity: 2\r\n            , isRecipe: true\r\n            , id: 3\r\n            , crystal: \"fire\"\r\n            , ingredients: [\r\n                {\r\n                    name: \"sheep meat\"\r\n                    , quantity: 1\r\n                },\r\n                {\r\n                    name: \"salt\"\r\n                    , quantity: 1\r\n                }\r\n            ]\r\n        }        \r\n    ]\r\n},\r\n    {\r\n        name: \"banana pie\",\r\n        id: 2\r\n    }\r\n    ]\r\n\r\n    \r\n\r\n})","angular.module('noServer').service('recipeListService', function ($http) {\r\n    this.recipeListServiceTest = \"recipeListService is working\"\r\n\r\nthis.getRecipeList  = () => ( $http.get('https://api.xivdb.com/recipe') )\r\n\r\n})","angular.module('noServer').service('singleRecipeService', function ($http) {\r\n    this.singleRecipeServiceTest = \"singleRecipeService is working\"\r\n\r\nthis.getRecipe = (id) => ( $http.get('https://api.xivdb.com/recipe/' + id).then(function (response) {\r\n            return response\r\n        }) )\r\n\r\n\r\n})\r\n"]}